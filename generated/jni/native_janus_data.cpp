// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from janus-client.djinni

#include "native_janus_data.hpp"  // my header
#include "djinni/jni/Marshal.hpp"

namespace djinni_generated {

NativeJanusData::NativeJanusData() : ::djinni::JniInterface<::Janus::JanusData, NativeJanusData>("com/github/helloiampau/janus/generated/JanusData$CppProxy") {}

NativeJanusData::~NativeJanusData() = default;


CJNIEXPORT void JNICALL Java_com_github_helloiampau_janus_generated_JanusData_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        delete reinterpret_cast<::djinni::CppProxyHandle<::Janus::JanusData>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jstring JNICALL Java_com_github_helloiampau_janus_generated_JanusData_00024CppProxy_native_1getString(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_key, jstring j_fallback)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::Janus::JanusData>(nativeRef);
        auto r = ref->getString(::djinni::String::toCpp(jniEnv, j_key),
                                ::djinni::String::toCpp(jniEnv, j_fallback));
        return ::djinni::release(::djinni::String::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jlong JNICALL Java_com_github_helloiampau_janus_generated_JanusData_00024CppProxy_native_1getInt(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_key, jlong j_fallback)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::Janus::JanusData>(nativeRef);
        auto r = ref->getInt(::djinni::String::toCpp(jniEnv, j_key),
                             ::djinni::I64::toCpp(jniEnv, j_fallback));
        return ::djinni::release(::djinni::I64::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jboolean JNICALL Java_com_github_helloiampau_janus_generated_JanusData_00024CppProxy_native_1getBool(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_key, jboolean j_fallback)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::Janus::JanusData>(nativeRef);
        auto r = ref->getBool(::djinni::String::toCpp(jniEnv, j_key),
                              ::djinni::Bool::toCpp(jniEnv, j_fallback));
        return ::djinni::release(::djinni::Bool::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_com_github_helloiampau_janus_generated_JanusData_00024CppProxy_native_1getObject(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_key)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::Janus::JanusData>(nativeRef);
        auto r = ref->getObject(::djinni::String::toCpp(jniEnv, j_key));
        return ::djinni::release(::djinni_generated::NativeJanusData::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_com_github_helloiampau_janus_generated_JanusData_00024CppProxy_native_1getList(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_key)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::Janus::JanusData>(nativeRef);
        auto r = ref->getList(::djinni::String::toCpp(jniEnv, j_key));
        return ::djinni::release(::djinni::List<::djinni_generated::NativeJanusData>::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

}  // namespace djinni_generated
