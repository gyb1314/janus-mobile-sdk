// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from janus-client.djinni

#include "native_plugin.hpp"  // my header
#include "djinni/jni/Marshal.hpp"
#include "native_bundle.hpp"
#include "native_janus_event.hpp"

namespace djinni_generated {

NativePlugin::NativePlugin() : ::djinni::JniInterface<::Janus::Plugin, NativePlugin>("com/github/helloiampau/janus/generated/Plugin$CppProxy") {}

NativePlugin::~NativePlugin() = default;

NativePlugin::JavaProxy::JavaProxy(JniType j) : Handle(::djinni::jniGetThreadEnv(), j) { }

NativePlugin::JavaProxy::~JavaProxy() = default;

void NativePlugin::JavaProxy::onEvent(const std::shared_ptr<::Janus::JanusEvent> & c_event, const std::shared_ptr<::Janus::Bundle> & c_context) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativePlugin>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_onEvent,
                           ::djinni::get(::djinni_generated::NativeJanusEvent::fromCpp(jniEnv, c_event)),
                           ::djinni::get(::djinni_generated::NativeBundle::fromCpp(jniEnv, c_context)));
    ::djinni::jniExceptionCheck(jniEnv);
}
void NativePlugin::JavaProxy::onHangup(const std::string & c_reason) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativePlugin>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_onHangup,
                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c_reason)));
    ::djinni::jniExceptionCheck(jniEnv);
}
void NativePlugin::JavaProxy::onClose() {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativePlugin>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_onClose);
    ::djinni::jniExceptionCheck(jniEnv);
}
void NativePlugin::JavaProxy::command(const std::string & c_command, const std::shared_ptr<::Janus::Bundle> & c_payload) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativePlugin>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_command,
                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c_command)),
                           ::djinni::get(::djinni_generated::NativeBundle::fromCpp(jniEnv, c_payload)));
    ::djinni::jniExceptionCheck(jniEnv);
}
void NativePlugin::JavaProxy::onOffer(const std::string & c_sdp, const std::shared_ptr<::Janus::Bundle> & c_context) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativePlugin>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_onOffer,
                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c_sdp)),
                           ::djinni::get(::djinni_generated::NativeBundle::fromCpp(jniEnv, c_context)));
    ::djinni::jniExceptionCheck(jniEnv);
}
void NativePlugin::JavaProxy::onAnswer(const std::string & c_sdp, const std::shared_ptr<::Janus::Bundle> & c_context) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativePlugin>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_onAnswer,
                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c_sdp)),
                           ::djinni::get(::djinni_generated::NativeBundle::fromCpp(jniEnv, c_context)));
    ::djinni::jniExceptionCheck(jniEnv);
}

CJNIEXPORT void JNICALL Java_com_github_helloiampau_janus_generated_Plugin_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        delete reinterpret_cast<::djinni::CppProxyHandle<::Janus::Plugin>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_github_helloiampau_janus_generated_Plugin_00024CppProxy_native_1onEvent(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jobject j_event, jobject j_context)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::Janus::Plugin>(nativeRef);
        ref->onEvent(::djinni_generated::NativeJanusEvent::toCpp(jniEnv, j_event),
                     ::djinni_generated::NativeBundle::toCpp(jniEnv, j_context));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_github_helloiampau_janus_generated_Plugin_00024CppProxy_native_1onHangup(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_reason)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::Janus::Plugin>(nativeRef);
        ref->onHangup(::djinni::String::toCpp(jniEnv, j_reason));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_github_helloiampau_janus_generated_Plugin_00024CppProxy_native_1onClose(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::Janus::Plugin>(nativeRef);
        ref->onClose();
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_github_helloiampau_janus_generated_Plugin_00024CppProxy_native_1command(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_command, jobject j_payload)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::Janus::Plugin>(nativeRef);
        ref->command(::djinni::String::toCpp(jniEnv, j_command),
                     ::djinni_generated::NativeBundle::toCpp(jniEnv, j_payload));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_github_helloiampau_janus_generated_Plugin_00024CppProxy_native_1onOffer(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_sdp, jobject j_context)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::Janus::Plugin>(nativeRef);
        ref->onOffer(::djinni::String::toCpp(jniEnv, j_sdp),
                     ::djinni_generated::NativeBundle::toCpp(jniEnv, j_context));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_github_helloiampau_janus_generated_Plugin_00024CppProxy_native_1onAnswer(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_sdp, jobject j_context)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::Janus::Plugin>(nativeRef);
        ref->onAnswer(::djinni::String::toCpp(jniEnv, j_sdp),
                      ::djinni_generated::NativeBundle::toCpp(jniEnv, j_context));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

}  // namespace djinni_generated
