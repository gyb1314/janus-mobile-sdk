// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from janus-client.djinni

#pragma once

#include "djinni/jni/djinni_support.hpp"
#include "plugin.hpp"

namespace djinni_generated {

class NativePlugin final : ::djinni::JniInterface<::Janus::Plugin, NativePlugin> {
public:
    using CppType = std::shared_ptr<::Janus::Plugin>;
    using CppOptType = std::shared_ptr<::Janus::Plugin>;
    using JniType = jobject;

    using Boxed = NativePlugin;

    ~NativePlugin();

    static CppType toCpp(JNIEnv* jniEnv, JniType j) { return ::djinni::JniClass<NativePlugin>::get()._fromJava(jniEnv, j); }
    static ::djinni::LocalRef<JniType> fromCppOpt(JNIEnv* jniEnv, const CppOptType& c) { return {jniEnv, ::djinni::JniClass<NativePlugin>::get()._toJava(jniEnv, c)}; }
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c) { return fromCppOpt(jniEnv, c); }

private:
    NativePlugin();
    friend ::djinni::JniClass<NativePlugin>;
    friend ::djinni::JniInterface<::Janus::Plugin, NativePlugin>;

    class JavaProxy final : ::djinni::JavaProxyHandle<JavaProxy>, public ::Janus::Plugin
    {
    public:
        JavaProxy(JniType j);
        ~JavaProxy();

        void onEvent(const std::shared_ptr<::Janus::JanusEvent> & event, const std::shared_ptr<::Janus::Bundle> & context) override;
        void onHangup(const std::string & reason) override;
        void onClose() override;
        void command(const std::string & command, const std::shared_ptr<::Janus::Bundle> & payload) override;
        void onOffer(const std::string & sdp, const std::shared_ptr<::Janus::Bundle> & context) override;
        void onAnswer(const std::string & sdp, const std::shared_ptr<::Janus::Bundle> & context) override;

    private:
        friend ::djinni::JniInterface<::Janus::Plugin, ::djinni_generated::NativePlugin>;
    };

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("com/github/helloiampau/janus/generated/Plugin") };
    const jmethodID method_onEvent { ::djinni::jniGetMethodID(clazz.get(), "onEvent", "(Lcom/github/helloiampau/janus/generated/JanusEvent;Lcom/github/helloiampau/janus/generated/Bundle;)V") };
    const jmethodID method_onHangup { ::djinni::jniGetMethodID(clazz.get(), "onHangup", "(Ljava/lang/String;)V") };
    const jmethodID method_onClose { ::djinni::jniGetMethodID(clazz.get(), "onClose", "()V") };
    const jmethodID method_command { ::djinni::jniGetMethodID(clazz.get(), "command", "(Ljava/lang/String;Lcom/github/helloiampau/janus/generated/Bundle;)V") };
    const jmethodID method_onOffer { ::djinni::jniGetMethodID(clazz.get(), "onOffer", "(Ljava/lang/String;Lcom/github/helloiampau/janus/generated/Bundle;)V") };
    const jmethodID method_onAnswer { ::djinni::jniGetMethodID(clazz.get(), "onAnswer", "(Ljava/lang/String;Lcom/github/helloiampau/janus/generated/Bundle;)V") };
};

}  // namespace djinni_generated
