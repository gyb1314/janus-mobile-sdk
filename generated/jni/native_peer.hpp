// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from janus-client.djinni

#pragma once

#include "djinni/jni/djinni_support.hpp"
#include "peer.hpp"

namespace djinni_generated {

class NativePeer final : ::djinni::JniInterface<::Janus::Peer, NativePeer> {
public:
    using CppType = std::shared_ptr<::Janus::Peer>;
    using CppOptType = std::shared_ptr<::Janus::Peer>;
    using JniType = jobject;

    using Boxed = NativePeer;

    ~NativePeer();

    static CppType toCpp(JNIEnv* jniEnv, JniType j) { return ::djinni::JniClass<NativePeer>::get()._fromJava(jniEnv, j); }
    static ::djinni::LocalRef<JniType> fromCppOpt(JNIEnv* jniEnv, const CppOptType& c) { return {jniEnv, ::djinni::JniClass<NativePeer>::get()._toJava(jniEnv, c)}; }
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c) { return fromCppOpt(jniEnv, c); }

private:
    NativePeer();
    friend ::djinni::JniClass<NativePeer>;
    friend ::djinni::JniInterface<::Janus::Peer, NativePeer>;

    class JavaProxy final : ::djinni::JavaProxyHandle<JavaProxy>, public ::Janus::Peer
    {
    public:
        JavaProxy(JniType j);
        ~JavaProxy();

        void createOffer(const ::Janus::Constraints & constraints, const std::shared_ptr<::Janus::Bundle> & context) override;
        void createAnswer(const ::Janus::Constraints & constraints, const std::shared_ptr<::Janus::Bundle> & context) override;
        void setLocalDescription(::Janus::SdpType type, const std::string & sdp) override;
        void setRemoteDescription(::Janus::SdpType type, const std::string & sdp) override;
        void addIceCandidate(const std::string & mid, int32_t index, const std::string & sdp) override;
        void close() override;

    private:
        friend ::djinni::JniInterface<::Janus::Peer, ::djinni_generated::NativePeer>;
    };

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("com/github/helloiampau/janus/generated/Peer") };
    const jmethodID method_createOffer { ::djinni::jniGetMethodID(clazz.get(), "createOffer", "(Lcom/github/helloiampau/janus/generated/Constraints;Lcom/github/helloiampau/janus/generated/Bundle;)V") };
    const jmethodID method_createAnswer { ::djinni::jniGetMethodID(clazz.get(), "createAnswer", "(Lcom/github/helloiampau/janus/generated/Constraints;Lcom/github/helloiampau/janus/generated/Bundle;)V") };
    const jmethodID method_setLocalDescription { ::djinni::jniGetMethodID(clazz.get(), "setLocalDescription", "(Lcom/github/helloiampau/janus/generated/SdpType;Ljava/lang/String;)V") };
    const jmethodID method_setRemoteDescription { ::djinni::jniGetMethodID(clazz.get(), "setRemoteDescription", "(Lcom/github/helloiampau/janus/generated/SdpType;Ljava/lang/String;)V") };
    const jmethodID method_addIceCandidate { ::djinni::jniGetMethodID(clazz.get(), "addIceCandidate", "(Ljava/lang/String;ILjava/lang/String;)V") };
    const jmethodID method_close { ::djinni::jniGetMethodID(clazz.get(), "close", "()V") };
};

}  // namespace djinni_generated
