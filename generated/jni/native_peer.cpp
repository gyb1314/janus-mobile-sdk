// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from janus-client.djinni

#include "native_peer.hpp"  // my header
#include "djinni/jni/Marshal.hpp"
#include "native_bundle.hpp"
#include "native_constraints.hpp"
#include "native_sdp_type.hpp"

namespace djinni_generated {

NativePeer::NativePeer() : ::djinni::JniInterface<::Janus::Peer, NativePeer>("com/github/helloiampau/janus/generated/Peer$CppProxy") {}

NativePeer::~NativePeer() = default;

NativePeer::JavaProxy::JavaProxy(JniType j) : Handle(::djinni::jniGetThreadEnv(), j) { }

NativePeer::JavaProxy::~JavaProxy() = default;

void NativePeer::JavaProxy::createOffer(const ::Janus::Constraints & c_constraints, const std::shared_ptr<::Janus::Bundle> & c_context) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativePeer>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_createOffer,
                           ::djinni::get(::djinni_generated::NativeConstraints::fromCpp(jniEnv, c_constraints)),
                           ::djinni::get(::djinni_generated::NativeBundle::fromCpp(jniEnv, c_context)));
    ::djinni::jniExceptionCheck(jniEnv);
}
void NativePeer::JavaProxy::createAnswer(const ::Janus::Constraints & c_constraints, const std::shared_ptr<::Janus::Bundle> & c_context) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativePeer>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_createAnswer,
                           ::djinni::get(::djinni_generated::NativeConstraints::fromCpp(jniEnv, c_constraints)),
                           ::djinni::get(::djinni_generated::NativeBundle::fromCpp(jniEnv, c_context)));
    ::djinni::jniExceptionCheck(jniEnv);
}
void NativePeer::JavaProxy::setLocalDescription(::Janus::SdpType c_type, const std::string & c_sdp) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativePeer>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_setLocalDescription,
                           ::djinni::get(::djinni_generated::NativeSdpType::fromCpp(jniEnv, c_type)),
                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c_sdp)));
    ::djinni::jniExceptionCheck(jniEnv);
}
void NativePeer::JavaProxy::setRemoteDescription(::Janus::SdpType c_type, const std::string & c_sdp) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativePeer>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_setRemoteDescription,
                           ::djinni::get(::djinni_generated::NativeSdpType::fromCpp(jniEnv, c_type)),
                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c_sdp)));
    ::djinni::jniExceptionCheck(jniEnv);
}
void NativePeer::JavaProxy::addIceCandidate(const std::string & c_mid, int32_t c_index, const std::string & c_sdp) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativePeer>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_addIceCandidate,
                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c_mid)),
                           ::djinni::get(::djinni::I32::fromCpp(jniEnv, c_index)),
                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c_sdp)));
    ::djinni::jniExceptionCheck(jniEnv);
}
void NativePeer::JavaProxy::close() {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativePeer>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_close);
    ::djinni::jniExceptionCheck(jniEnv);
}

CJNIEXPORT void JNICALL Java_com_github_helloiampau_janus_generated_Peer_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        delete reinterpret_cast<::djinni::CppProxyHandle<::Janus::Peer>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_github_helloiampau_janus_generated_Peer_00024CppProxy_native_1createOffer(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jobject j_constraints, jobject j_context)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::Janus::Peer>(nativeRef);
        ref->createOffer(::djinni_generated::NativeConstraints::toCpp(jniEnv, j_constraints),
                         ::djinni_generated::NativeBundle::toCpp(jniEnv, j_context));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_github_helloiampau_janus_generated_Peer_00024CppProxy_native_1createAnswer(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jobject j_constraints, jobject j_context)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::Janus::Peer>(nativeRef);
        ref->createAnswer(::djinni_generated::NativeConstraints::toCpp(jniEnv, j_constraints),
                          ::djinni_generated::NativeBundle::toCpp(jniEnv, j_context));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_github_helloiampau_janus_generated_Peer_00024CppProxy_native_1setLocalDescription(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jobject j_type, jstring j_sdp)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::Janus::Peer>(nativeRef);
        ref->setLocalDescription(::djinni_generated::NativeSdpType::toCpp(jniEnv, j_type),
                                 ::djinni::String::toCpp(jniEnv, j_sdp));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_github_helloiampau_janus_generated_Peer_00024CppProxy_native_1setRemoteDescription(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jobject j_type, jstring j_sdp)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::Janus::Peer>(nativeRef);
        ref->setRemoteDescription(::djinni_generated::NativeSdpType::toCpp(jniEnv, j_type),
                                  ::djinni::String::toCpp(jniEnv, j_sdp));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_github_helloiampau_janus_generated_Peer_00024CppProxy_native_1addIceCandidate(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_mid, jint j_index, jstring j_sdp)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::Janus::Peer>(nativeRef);
        ref->addIceCandidate(::djinni::String::toCpp(jniEnv, j_mid),
                             ::djinni::I32::toCpp(jniEnv, j_index),
                             ::djinni::String::toCpp(jniEnv, j_sdp));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_github_helloiampau_janus_generated_Peer_00024CppProxy_native_1close(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::Janus::Peer>(nativeRef);
        ref->close();
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

}  // namespace djinni_generated
