// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from janus-client.djinni

#pragma once

#include "djinni/jni/djinni_support.hpp"
#include "sdp_constraints.hpp"

namespace djinni_generated {

class NativeSdpConstraints final {
public:
    using CppType = ::Janus::SdpConstraints;
    using JniType = jobject;

    using Boxed = NativeSdpConstraints;

    ~NativeSdpConstraints();

    static CppType toCpp(JNIEnv* jniEnv, JniType j);
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c);

private:
    NativeSdpConstraints();
    friend ::djinni::JniClass<NativeSdpConstraints>;

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("com/github/helloiampau/janus/generated/SdpConstraints") };
    const jmethodID jconstructor { ::djinni::jniGetMethodID(clazz.get(), "<init>", "(ZZZZZ)V") };
    const jfieldID field_sendAudio { ::djinni::jniGetFieldID(clazz.get(), "sendAudio", "Z") };
    const jfieldID field_sendVideo { ::djinni::jniGetFieldID(clazz.get(), "sendVideo", "Z") };
    const jfieldID field_receiveAudio { ::djinni::jniGetFieldID(clazz.get(), "receiveAudio", "Z") };
    const jfieldID field_receiveVideo { ::djinni::jniGetFieldID(clazz.get(), "receiveVideo", "Z") };
    const jfieldID field_datachannel { ::djinni::jniGetFieldID(clazz.get(), "datachannel", "Z") };
};

}  // namespace djinni_generated
