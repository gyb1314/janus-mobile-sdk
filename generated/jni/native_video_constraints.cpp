// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from janus-client.djinni

#include "native_video_constraints.hpp"  // my header
#include "djinni/jni/Marshal.hpp"
#include "native_camera.hpp"

namespace djinni_generated {

NativeVideoConstraints::NativeVideoConstraints() = default;

NativeVideoConstraints::~NativeVideoConstraints() = default;

auto NativeVideoConstraints::fromCpp(JNIEnv* jniEnv, const CppType& c) -> ::djinni::LocalRef<JniType> {
    const auto& data = ::djinni::JniClass<NativeVideoConstraints>::get();
    auto r = ::djinni::LocalRef<JniType>{jniEnv->NewObject(data.clazz.get(), data.jconstructor,
                                                           ::djinni::get(::djinni::I32::fromCpp(jniEnv, c.width)),
                                                           ::djinni::get(::djinni::I32::fromCpp(jniEnv, c.height)),
                                                           ::djinni::get(::djinni::I32::fromCpp(jniEnv, c.fps)),
                                                           ::djinni::get(::djinni_generated::NativeCamera::fromCpp(jniEnv, c.camera)))};
    ::djinni::jniExceptionCheck(jniEnv);
    return r;
}

auto NativeVideoConstraints::toCpp(JNIEnv* jniEnv, JniType j) -> CppType {
    ::djinni::JniLocalScope jscope(jniEnv, 5);
    assert(j != nullptr);
    const auto& data = ::djinni::JniClass<NativeVideoConstraints>::get();
    return {::djinni::I32::toCpp(jniEnv, jniEnv->GetIntField(j, data.field_width)),
            ::djinni::I32::toCpp(jniEnv, jniEnv->GetIntField(j, data.field_height)),
            ::djinni::I32::toCpp(jniEnv, jniEnv->GetIntField(j, data.field_fps)),
            ::djinni_generated::NativeCamera::toCpp(jniEnv, jniEnv->GetObjectField(j, data.field_camera))};
}

}  // namespace djinni_generated
